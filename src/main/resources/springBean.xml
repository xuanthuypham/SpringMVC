<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">


	<bean id="helloBean" class="com.tinyworld.spring.example.HelloWorld">
		<property name="name" value="Mai Van Ha" />
	</bean>

	<aop:aspectj-autoproxy/>
	<bean id="anLogging" class="com.tinyworld.spring.aop.AnnotationAspectLogging" />
	
	<!-- config bean for JSF AOP Security -->
	<bean id="securityInterceptor" class="com.tinyworld.spring.security.SecurityInterceptor" />

	<!-- Definition aspect in XML configuration -->
	<!-- <bean id="xmlLogging" class="com.tinyworld.spring.aop.XMLAspectLogging" 
		/> <aop:config> <aop:aspect id="aspectLoggging" ref="logging"> <aop:pointcut 
		id="pointCutBefore" expression="execution(* com.tinyworld.spring.example.HelloWorld.*(..))" 
		/> <aop:before method="logBefore" pointcut-ref="pointCutBefore" /> <aop:pointcut 
		id="pointCutAfter" expression="execution(* com.tinyworld.spring.example.HelloWorld.*(..))" 
		/> <aop:after method="logAfter" pointcut-ref="pointCutAfter" /> <aop:pointcut 
		id="pointCutAfterReturning" expression="execution(* com.tinyworld.spring.example.HelloWorld.*(..))" 
		/> <aop:after-returning method="logAfterReturning" returning="result" pointcut-ref="pointCutAfterReturning" 
		/> <aop:pointcut id="pointCutAfterThrowing" expression="execution(* com.tinyworld.spring.example.HelloWorld.*(..))" 
		/> <aop:after-throwing method="logAfterThrowing" throwing="error" pointcut-ref="pointCutAfterThrowing" 
		/> <aop:pointcut id="pointCutAround" expression="execution(* com.tinyworld.spring.example.HelloWorld.*(..))" 
		/> <aop:around method="logAround" pointcut-ref="pointCutAround" /> </aop:aspect> 
		</aop:config> -->

</beans>